# Dockerfile for e2e testing with KataGo
# Uses pre-built KataGo base image to speed up builds
FROM --platform=linux/amd64 ghcr.io/dmmcquay/katago-base:v1.14.1 AS katago-base

# Main stage
FROM --platform=linux/amd64 golang:1.23-bookworm

# Install runtime dependencies (these should match what's in the base image)
RUN apt-get update && apt-get install -y \
    libzip4 \
    libboost-filesystem-dev \
    libgoogle-perftools4 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy KataGo binary from pre-built base image
COPY --from=katago-base /usr/local/bin/katago /usr/local/bin/katago
RUN chmod +x /usr/local/bin/katago && /usr/local/bin/katago version

# Copy model and configs
RUN mkdir -p /katago
COPY docker/katago-artifacts/test-model.bin.gz /katago/model.bin.gz
COPY docker/katago-artifacts/test-config.cfg /katago/config.cfg
COPY docker/katago-artifacts/test-config-mistakes.cfg /katago/config-mistakes.cfg

# Set test environment variables
ENV KATAGO_TEST_MODEL=/katago/model.bin.gz
ENV KATAGO_TEST_CONFIG=/katago/config.cfg
ENV CGO_ENABLED=0
ENV GOTOOLCHAIN=local

WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the application code
COPY . .

# Default command runs e2e tests
CMD ["go", "test", "-v", "-tags=e2e", "-count=1", "./e2e", "-timeout", "300s"]